# Generated by Django 4.0.6 on 2022-07-18 08:33

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Locations',
            fields=[
                ('idLocations', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=50)),
                ('location_city', models.CharField(max_length=20)),
                ('isBooked', models.BooleanField(default=False, verbose_name='Is Booked')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='Schedules',
            fields=[
                ('idSchedule', models.AutoField(primary_key=True, serialize=False)),
                ('teams1_ID', models.IntegerField()),
                ('teams2_ID', models.IntegerField()),
                ('match_date', models.TextField(default='', max_length=20)),
                ('idLocations', models.IntegerField()),
                ('result', models.IntegerField(default=0)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Schedules',
            },
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('idTeams', models.AutoField(primary_key=True, serialize=False)),
                ('teams_name', models.CharField(max_length=50)),
                ('teams_sponsor', models.CharField(max_length=20)),
                ('teams_players', models.CharField(default='', max_length=50)),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is Approved')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Teams',
            },
        ),
        migrations.CreateModel(
            name='TPS_Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('idPlayers', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('name', models.CharField(max_length=50)),
                ('contactNo', models.CharField(max_length=20)),
                ('idTeams', models.CharField(max_length=20)),
                ('is_capitan', models.BooleanField(blank=True, default=False, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'TPS_Users',
            },
        ),
    ]
